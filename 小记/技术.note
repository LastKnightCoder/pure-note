{
  "editing": {
    "content": "",
    "preview": "",
    "tags": []
  },
  "notes": [
    {
      "content": "WebStorm 提示 \n\n```console\nEsLint: Specify a path to the 'eslint' package\n```\n\n解决办法：全局下载 `eslint` 然后重启 IDE\n\n```shell\nnpm install eslint -g\n```",
      "preview": "<p>WebStorm 提示 </p>\n<pre class=\"language-console\" tabindex=\"0\"><code class=\"language-console is-loaded\">EsLint: Specify a path to the 'eslint' package\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>解决办法：全局下载 <code>eslint</code> 然后重启 IDE</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint -g\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "WebStorm",
        "eslint",
        "错误处理"
      ],
      "createTime": 1676010194454,
      "updateTime": 1676010194454,
      "uuid": "b8b2f36b-5308-4f46-aabb-82d7894a7118",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "`nvm` 设置 Node 默认版本\n\n```shell\nnvm alias default v14.20.0\n```",
      "preview": "<p><code>nvm</code> 设置 Node 默认版本</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\">nvm <span class=\"token builtin class-name\">alias</span> default v14.20.0\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "nvm",
        "Node"
      ],
      "createTime": 1676010103664,
      "updateTime": 1676010103664,
      "uuid": "37576c66-f91e-4f36-b853-9899a9f68011",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "文字的底线 (bottom line)，参考字母 **y g** 的下边缘，是会超过行框盒子的大小的，超出的部分大约为字体大小的 5%-10%，这个应该和字体有关，不过不同的字体都相差不大。\n\n文字的基线，参考字母 **x** 的下边缘，距行框盒子底部大约是 15%-20% 的字体大小。",
      "preview": "<p>文字的底线 (bottom line)，参考字母 <strong>y g</strong> 的下边缘，是会超过行框盒子的大小的，超出的部分大约为字体大小的 5%-10%，这个应该和字体有关，不过不同的字体都相差不大。</p>\n<p>文字的基线，参考字母 <strong>x</strong> 的下边缘，距行框盒子底部大约是 15%-20% 的字体大小。</p>",
      "tags": [
        "字体",
        "文字居中"
      ],
      "createTime": 1675262503980,
      "updateTime": 1675262503980,
      "uuid": "4d095b09-d2c9-43af-b464-3cb7e9915565",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "通过 `explorer .` 在命令行打开当前所在目录文件夹。",
      "preview": "<p>通过 <code>explorer .</code> 在命令行打开当前所在目录文件夹。</p>",
      "tags": [
        "Windows"
      ],
      "createTime": 1665573407080,
      "updateTime": 1665573407080,
      "uuid": "076e25b3-e6f8-491e-b0d4-91e1ff0fc182",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "剪切视频\n\n```shell\nffmpeg -ss 00:00:00 -t 00:00:30 -i test.mp4 -vcodec copy -acodec copy output.mp4\n* -ss 指定从什么时间开始\n* -t 指定需要截取多长时间\n* -i 指定输入文件\n```\n\n合并视频\n\n```shell\n//截取从头开始的30s\nffmpeg -ss 00:00:00 -t 00:00:30 -i keyoutput.mp4 -vcodec copy -acodec copy split.mp4\n//截取从30s开始的30s\nffmpeg -ss 00:00:30 -t 00:00:30 -i keyoutput.mp4 -vcodec copy -acodec copy split1.mp4\n//进行视频的合并\nffmpeg -f concat -i list.txt -c copy concat.mp4\n```\n\n```text\n# list.txt\nfile ./split.mp4\nfile ./split1.mp4\n```",
      "preview": "<p>剪切视频</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\">ffmpeg -ss 00:00:00 -t 00:00:30 -i test.mp4 -vcodec copy -acodec copy output.mp4\n* -ss 指定从什么时间开始\n* -t 指定需要截取多长时间\n* -i 指定输入文件\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>合并视频</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\">//截取从头开始的30s\nffmpeg -ss 00:00:00 -t 00:00:30 -i keyoutput.mp4 -vcodec copy -acodec copy split.mp4\n//截取从30s开始的30s\nffmpeg -ss 00:00:30 -t 00:00:30 -i keyoutput.mp4 -vcodec copy -acodec copy split1.mp4\n//进行视频的合并\nffmpeg -f concat -i list.txt -c copy concat.mp4\n</code><button class=\"copy-code-button\">复制</button></pre>\n<pre class=\"language-text\" tabindex=\"0\"><code class=\"language-text is-loaded\"># list.txt\nfile ./split.mp4\nfile ./split1.mp4\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "ffmpeg"
      ],
      "createTime": 1664019774480,
      "updateTime": 1664019774480,
      "uuid": "e5fd9f15-9dc0-4c45-a464-6fbb732fb407",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "### intersectionRatio\n\n元素出现在视口中的比例\n",
      "preview": "<h3 data-heading=\"intersectionRatio\">intersectionRatio</h3>\n<p>元素出现在视口中的比例</p>",
      "tags": [],
      "createTime": 1664019582828,
      "updateTime": 1664019582828,
      "uuid": "2190bc3f-f475-4a77-9459-4180cfeb5e96",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "如果我们需要监听某个元素是否出现在视口中，我们需要监听 `scroll `事件，然后查询 `scrollTop`，但是由于 `scroll `事件频繁触发，其性能无法得到保障。\n\n浏览器提供了 `IntersectionObserver` 监听器，可以监听某个元素是否出现在视口中，并执行相应的回调。\n\n\n```antd\nconst { Tabs } = antd;\nconst { TabPane } = Tabs;\n\nconst languages = ['html', 'css', 'javascript']\nconst tabNames = ['HTML', 'CSS', 'JavaScript']\n\nconst code = `\\`\\`\\`${languages[0]}\n<div id=\"box\"></div>\n\\`\\`\\``\n\nconst code2 = `\\`\\`\\`${languages[1]}\n#box {\n  width: 100vw;\n  height: 100vh;\n  background: deeppink;\n  position: relative;\n  top: 100vh;\n}\n\\`\\`\\``\n\nconst code3 = `\\`\\`\\`${languages[2]}\nconst observer = new IntersectionObserver(entries => {\n    console.log('entries: ', entries);\n});\n\nobserver.observe(document.getElementById('box'));\n\\`\\`\\``\n\n\nconst html = await renderMarkdown(code)\nconst css= await renderMarkdown(code2)\nconst javascript = await renderMarkdown(code3);\n\nconst CodeTab = () => (\n  <Tabs defaultActiveKey=\"1\">\n    <TabPane tab={tabNames[0]} key=\"1\">\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </TabPane>\n    <TabPane tab={tabNames[1]} key=\"2\">\n      <div dangerouslySetInnerHTML={{ __html: css}} />\n    </TabPane>\n    <TabPane tab={tabNames[2]} key=\"3\">\n      <div dangerouslySetInnerHTML={{ __html: javascript}} />\n    </TabPane>\n  </Tabs>\n);\n\nconst root = ReactDOM.createRoot(el)\nroot.render(<CodeTab />)\n```\n",
      "preview": "<p>如果我们需要监听某个元素是否出现在视口中，我们需要监听 <code>scroll </code>事件，然后查询 <code>scrollTop</code>，但是由于 <code>scroll </code>事件频繁触发，其性能无法得到保障。</p>\n<p>浏览器提供了 <code>IntersectionObserver</code> 监听器，可以监听某个元素是否出现在视口中，并执行相应的回调。</p>\n<div class=\"block-language-antd\"></div>",
      "tags": [],
      "createTime": 1664007592966,
      "updateTime": 1664007675334,
      "uuid": "ac3d2b43-bbfc-4817-a3e8-276ccccc539c",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "Faas 函数如果长时间未使用，容器就会对其进行回收。所以函数在首次调用或长时间未使用时，容器就需要重新创建该函数的实例，这个过程称为冷启动，一般耗时为数百毫秒。\n\n既然有冷启动，就有热启动。例如容器刚刚调用完函数，过一会又有新的事件触发。这时由于函数仍未被回收，所以可以直接复用原有的函数实例，这被称为热启动。",
      "preview": "<p>Faas 函数如果长时间未使用，容器就会对其进行回收。所以函数在首次调用或长时间未使用时，容器就需要重新创建该函数的实例，这个过程称为冷启动，一般耗时为数百毫秒。</p>\n<p>既然有冷启动，就有热启动。例如容器刚刚调用完函数，过一会又有新的事件触发。这时由于函数仍未被回收，所以可以直接复用原有的函数实例，这被称为热启动。</p>",
      "tags": [
        "Fass"
      ],
      "createTime": 1663989240622,
      "updateTime": 1663989240622,
      "uuid": "7adcf609-0a25-4b4f-a91a-71a5d14688b3",
      "isCreated": true
    },
    {
      "content": "高内聚，就是指一个函数尽量只做一件事。低耦合，就是两个模块之间的关联程度低。\n\nTDD(Test-Driven Development) 就是根据需求提前把测试代码写好，然后根据测试代码实现功能。但如果你的需求经常变（你懂的），那就不是一件好事了。很有可能你天天都在改测试代码，业务代码反而没怎么动。\n\n端到端测试，主要是模拟用户对页面进行一系列操作并验证其是否符合预期。\n\n当 DOM 变更触发 MutationObserver 事件时，只是代表 DOM 内容可以被读取到，并不代表该 DOM 被绘制到了屏幕上。\n\n上报时机有三种：\n\n1. 采用 requestIdleCallback/setTimeout 延时上报。\n2. 在 beforeunload() 回调函数里上报。\n3. 缓存上报数据，达到一定数量后再上报。\n\n建议将三种方式结合一起上报：\n\n1. 先缓存上报数据，缓存到一定数量后，利用 requestIdleCallback/setTimeout 延时上报。\n2. 在页面离开时统一将未上报的数据进行上报。\n\n服务端渲染过程\n\n1. 访问服务端渲染的网站。\n2. 服务器会查看当前路由组件需要哪些资源文件，然后将这些文件的内容填充到 HTML 文件。如果有 ajax 请求，就会执行它进行数据预取并填充到 HTML 文件里，最后返回这个 HTML 页面。\n3. 当客户端接收到这个 HTML 页面时，可以马上就开始渲染页面。与此同时，页面也会加载资源，当必要的资源都加载完毕后，开始执行 `new Vue()` 开始实例化并接管页面。\n\n更快的内容到达时间 (time-to-content)。\n\nJavaScript 中的数字都使用 IEEE-754 标准以 64 位格式存储。但是在位操作中，数字被转换为有符号的 32 位格式。即使需要转换，位操作也比其他数学运算和布尔操作快得多。\n\nCSS 选择器优化不是必需的，因为最慢和慢快的选择器性能差别非常小。\n\n在 CSS 中，transforms 和 opacity 这两个属性更改不会触发重排与重绘，它们是可以由合成器（composite）单独处理的属性。\n\nServerless，即无服务架构。是指由第三方云计算供应商以服务的方式为开发者提供所需功能，例如数据库、消息，以及身份验证等。它的核心思想是让开发者专注构建和运行应用，而无需管理服务器。\n\nServerless 最大的优点就是自动扩展伸缩、无需自己管理。缺点：当应用部署在云上，并且使用云存储或云数据库，那可能会让我们的应用访问速度变得比较慢。因为网络的访问速度比内存和硬盘差了一到两个数量级。\n\n",
      "preview": "<p>高内聚，就是指一个函数尽量只做一件事。低耦合，就是两个模块之间的关联程度低。</p>\n<p>TDD(Test-Driven Development) 就是根据需求提前把测试代码写好，然后根据测试代码实现功能。但如果你的需求经常变（你懂的），那就不是一件好事了。很有可能你天天都在改测试代码，业务代码反而没怎么动。</p>\n<p>端到端测试，主要是模拟用户对页面进行一系列操作并验证其是否符合预期。</p>\n<p>当 DOM 变更触发 MutationObserver 事件时，只是代表 DOM 内容可以被读取到，并不代表该 DOM 被绘制到了屏幕上。</p>\n<p>上报时机有三种：</p>\n<ol>\n<li>采用 requestIdleCallback/setTimeout 延时上报。</li>\n<li>在 beforeunload() 回调函数里上报。</li>\n<li>缓存上报数据，达到一定数量后再上报。</li>\n</ol>\n<p>建议将三种方式结合一起上报：</p>\n<ol>\n<li>先缓存上报数据，缓存到一定数量后，利用 requestIdleCallback/setTimeout 延时上报。</li>\n<li>在页面离开时统一将未上报的数据进行上报。</li>\n</ol>\n<p>服务端渲染过程</p>\n<ol>\n<li>访问服务端渲染的网站。</li>\n<li>服务器会查看当前路由组件需要哪些资源文件，然后将这些文件的内容填充到 HTML 文件。如果有 ajax 请求，就会执行它进行数据预取并填充到 HTML 文件里，最后返回这个 HTML 页面。</li>\n<li>当客户端接收到这个 HTML 页面时，可以马上就开始渲染页面。与此同时，页面也会加载资源，当必要的资源都加载完毕后，开始执行 <code>new Vue()</code> 开始实例化并接管页面。</li>\n</ol>\n<p>更快的内容到达时间 (time-to-content)。</p>\n<p>JavaScript 中的数字都使用 IEEE-754 标准以 64 位格式存储。但是在位操作中，数字被转换为有符号的 32 位格式。即使需要转换，位操作也比其他数学运算和布尔操作快得多。</p>\n<p>CSS 选择器优化不是必需的，因为最慢和慢快的选择器性能差别非常小。</p>\n<p>在 CSS 中，transforms 和 opacity 这两个属性更改不会触发重排与重绘，它们是可以由合成器（composite）单独处理的属性。</p>\n<p>Serverless，即无服务架构。是指由第三方云计算供应商以服务的方式为开发者提供所需功能，例如数据库、消息，以及身份验证等。它的核心思想是让开发者专注构建和运行应用，而无需管理服务器。</p>\n<p>Serverless 最大的优点就是自动扩展伸缩、无需自己管理。缺点：当应用部署在云上，并且使用云存储或云数据库，那可能会让我们的应用访问速度变得比较慢。因为网络的访问速度比内存和硬盘差了一到两个数量级。</p>",
      "tags": [
        "前端工程化",
        "前端监控"
      ],
      "createTime": 1663977953693,
      "updateTime": 1663989179543,
      "uuid": "a795599b-d037-462d-8350-76ff9871cc85",
      "isCreated": true
    },
    {
      "content": "`:where()` 伪类的优先级是0，无论其参数内的选择器优先级多高。\n\n`:is()` 伪类的优先级是由括号内选择器的优先级决定的。\n\n\n在 Vue 等框架中使用 `:is()` 伪类，选择器就不会再增加随机属性选择器。\n\n`:is()` 伪类正式支持是 Chrome88 开始的，也就是 21 年 1 月份，到现在已经快 2 年了，那些对兼容性要求不高的项目可以放心大胆使用，如果非要兼容陈旧浏览器，可以使用 `:-webkit-any()` 伪类兼容下，除了选择器的优先级不一样外（`:any()`伪类的优先级恒定为类选择器优先级，忽略里面的参数），其他功效是一样的。",
      "preview": "<p><code>:where()</code> 伪类的优先级是0，无论其参数内的选择器优先级多高。</p>\n<p><code>:is()</code> 伪类的优先级是由括号内选择器的优先级决定的。</p>\n<p>在 Vue 等框架中使用 <code>:is()</code> 伪类，选择器就不会再增加随机属性选择器。</p>\n<p><code>:is()</code> 伪类正式支持是 Chrome88 开始的，也就是 21 年 1 月份，到现在已经快 2 年了，那些对兼容性要求不高的项目可以放心大胆使用，如果非要兼容陈旧浏览器，可以使用 <code>:-webkit-any()</code> 伪类兼容下，除了选择器的优先级不一样外（<code>:any()</code>伪类的优先级恒定为类选择器优先级，忽略里面的参数），其他功效是一样的。</p>",
      "tags": [
        "Vue",
        ":is",
        ":where",
        "CSS"
      ],
      "createTime": 1663933940983,
      "updateTime": 1674704491754,
      "uuid": "d2fcf60b-0c9b-4b3f-8eaa-566d81afbe8a",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "`:where()` 伪类的优先级是0，无论其参数内的选择器优先级多高。\n\n`:is()` 伪类的优先级是由括号内选择器的优先级决定的。\n\n",
      "preview": "<p><code>:where()</code> 伪类的优先级是0，无论其参数内的选择器优先级多高。</p>\n<p><code>:is()</code> 伪类的优先级是由括号内选择器的优先级决定的。</p>",
      "tags": [
        "CSS"
      ],
      "createTime": 1663933824822,
      "updateTime": 1663934146771,
      "uuid": "edf7b553-9c81-4030-9361-f59ff41b5433",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "缓存：Get 请求能缓存，Post 请求不能。\n\n从 TCP 的角度，GET 请求会把请求报文一次性发出去，而 POST 会分为两个 TCP 数据包，首先发 header 部分，如果服务器响应 100(continue)， 然后发 body 部分。(火狐浏览器除外，它的 POST 请求只发一个 TCP 包)",
      "preview": "<p>缓存：Get 请求能缓存，Post 请求不能。</p>\n<p>从 TCP 的角度，GET 请求会把请求报文一次性发出去，而 POST 会分为两个 TCP 数据包，首先发 header 部分，如果服务器响应 100(continue)， 然后发 body 部分。(火狐浏览器除外，它的 POST 请求只发一个 TCP 包)</p>",
      "tags": [
        "HTTP"
      ],
      "createTime": 1663894417170,
      "updateTime": 1663894480356,
      "uuid": "93ce7b27-2987-44fd-8b5e-1ee120599342",
      "isCreated": true
    },
    {
      "content": "## 什么是 monorepo\n\nA monorepo is a single repository containing multiple distinct projects, with well-defined relationships.\n\n<img src=\"https://cdn.staticaly.com/gh/LastKnightCoder/ImgHosting3@master/image.1mzal8rtokjk.png\" style=\"zoom: 50%;\" />\n\nmonorepo 不仅仅是代码托管，每个 repo 之间具有关系。\n\n\n",
      "preview": "<h2 data-heading=\"什么是 monorepo\">什么是 monorepo</h2>\n<p>A monorepo is a single repository containing multiple distinct projects, with well-defined relationships.</p>\n<img style=\"zoom: 50%;\" src=\"https://cdn.staticaly.com/gh/LastKnightCoder/ImgHosting3@master/image.1mzal8rtokjk.png\" referrerpolicy=\"no-referrer\">\n<p>monorepo 不仅仅是代码托管，每个 repo 之间具有关系。</p>",
      "tags": [
        "monorepo"
      ],
      "createTime": 1663859500645,
      "updateTime": 1663859500645,
      "uuid": "35094fd0-a03d-4761-8ab8-806d95bf0454",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "Linux 上查看 cpu 信息\n\n```shell\n$ lscpu\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              32\nOn-line CPU(s) list: 0-31\nThread(s) per core:  2\nCore(s) per socket:  8\nSocket(s):           2\nNUMA node(s):        2\nVendor ID:           GenuineIntel\nCPU family:          6\nModel:               79\nModel name:          Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz\nStepping:            1\nCPU MHz:             1800.000\nCPU max MHz:         3000.0000\nCPU min MHz:         1200.0000\nBogoMIPS:            4199.96\nVirtualization:      VT-x\nL1d cache:           32K\nL1i cache:           32K\nL2 cache:            256K\nL3 cache:            20480K\nNUMA node0 CPU(s):   0-7,16-23\nNUMA node1 CPU(s):   8-15,24-31\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d\n```\n\n```shell\ncat /proc/cpuinfo\nprocessor\t: 0\nvendor_id\t: GenuineIntel\ncpu family\t: 6\nmodel\t\t: 79\nmodel name\t: Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz\nstepping\t: 1\nmicrocode\t: 0xb00003e\ncpu MHz\t\t: 1931.225\ncache size\t: 20480 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 0\ncpu cores\t: 8\napicid\t\t: 0\ninitial apicid\t: 0\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 20\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d\nvmx flags\t: vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit\nbogomips\t: 4199.96\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 46 bits physical, 48 bits virtual\npower management:\n\nprocessor\t: 1\nvendor_id\t: GenuineIntel\ncpu family\t: 6\nmodel\t\t: 79\nmodel name\t: Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz\nstepping\t: 1\nmicrocode\t: 0xb00003e\ncpu MHz\t\t: 2700.000\ncache size\t: 20480 KB\nphysical id\t: 0\nsiblings\t: 16\ncore id\t\t: 1\ncpu cores\t: 8\napicid\t\t: 2\ninitial apicid\t: 2\nfpu\t\t: yes\nfpu_exception\t: yes\ncpuid level\t: 20\nwp\t\t: yes\nflags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d\nvmx flags\t: vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml\nbugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit\nbogomips\t: 4199.96\nclflush size\t: 64\ncache_alignment\t: 64\naddress sizes\t: 46 bits physical, 48 bits virtual\npower management:\n\n```",
      "preview": "<p>Linux 上查看 cpu 信息</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\">$ lscpu\nArchitecture:        x86_64\nCPU op-mode<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:      <span class=\"token number\">32</span>-bit, <span class=\"token number\">64</span>-bit\nByte Order:          Little Endian\nCPU<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:              <span class=\"token number\">32</span>\nOn-line CPU<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> list: <span class=\"token number\">0</span>-31\nThread<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> per core:  <span class=\"token number\">2</span>\nCore<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> per socket:  <span class=\"token number\">8</span>\nSocket<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:           <span class=\"token number\">2</span>\nNUMA node<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:        <span class=\"token number\">2</span>\nVendor ID:           GenuineIntel\nCPU family:          <span class=\"token number\">6</span>\nModel:               <span class=\"token number\">79</span>\nModel name:          Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Xeon<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> CPU E5-2620 v4 @ <span class=\"token number\">2</span>.10GHz\nStepping:            <span class=\"token number\">1</span>\nCPU MHz:             <span class=\"token number\">1800.000</span>\nCPU max MHz:         <span class=\"token number\">3000.0000</span>\nCPU min MHz:         <span class=\"token number\">1200.0000</span>\nBogoMIPS:            <span class=\"token number\">4199.96</span>\nVirtualization:      VT-x\nL1d cache:           32K\nL1i cache:           32K\nL2 cache:            256K\nL3 cache:            20480K\nNUMA node0 CPU<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:   <span class=\"token number\">0</span>-7,16-23\nNUMA node1 CPU<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:   <span class=\"token number\">8</span>-15,24-31\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d\n</code><button class=\"copy-code-button\">复制</button></pre>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\"><span class=\"token function\">cat</span> /proc/cpuinfo\nprocessor\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\nvendor_id\t<span class=\"token builtin class-name\">:</span> GenuineIntel\ncpu family\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">6</span>\nmodel\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">79</span>\nmodel name\t<span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Xeon<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> CPU E5-2620 v4 @ <span class=\"token number\">2</span>.10GHz\nstepping\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\nmicrocode\t<span class=\"token builtin class-name\">:</span> 0xb00003e\ncpu MHz\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">1931.225</span>\ncache size\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">20480</span> KB\nphysical <span class=\"token function\">id</span>\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\nsiblings\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">16</span>\ncore <span class=\"token function\">id</span>\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\ncpu cores\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">8</span>\napicid\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\ninitial apicid\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\nfpu\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token function\">yes</span>\nfpu_exception\t<span class=\"token builtin class-name\">:</span> <span class=\"token function\">yes</span>\ncpuid level\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">20</span>\nwp\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token function\">yes</span>\nflags\t\t<span class=\"token builtin class-name\">:</span> fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d\nvmx flags\t<span class=\"token builtin class-name\">:</span> vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml\nbugs\t\t<span class=\"token builtin class-name\">:</span> cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit\nbogomips\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">4199.96</span>\nclflush size\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">64</span>\ncache_alignment\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">64</span>\naddress sizes\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">46</span> bits physical, <span class=\"token number\">48</span> bits virtual\npower management:\n\nprocessor\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\nvendor_id\t<span class=\"token builtin class-name\">:</span> GenuineIntel\ncpu family\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">6</span>\nmodel\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">79</span>\nmodel name\t<span class=\"token builtin class-name\">:</span> Intel<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> Xeon<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span> CPU E5-2620 v4 @ <span class=\"token number\">2</span>.10GHz\nstepping\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\nmicrocode\t<span class=\"token builtin class-name\">:</span> 0xb00003e\ncpu MHz\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">2700.000</span>\ncache size\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">20480</span> KB\nphysical <span class=\"token function\">id</span>\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\nsiblings\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">16</span>\ncore <span class=\"token function\">id</span>\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\ncpu cores\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">8</span>\napicid\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>\ninitial apicid\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>\nfpu\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token function\">yes</span>\nfpu_exception\t<span class=\"token builtin class-name\">:</span> <span class=\"token function\">yes</span>\ncpuid level\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">20</span>\nwp\t\t<span class=\"token builtin class-name\">:</span> <span class=\"token function\">yes</span>\nflags\t\t<span class=\"token builtin class-name\">:</span> fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d\nvmx flags\t<span class=\"token builtin class-name\">:</span> vnmi preemption_timer posted_intr invvpid ept_x_only ept_ad ept_1gb flexpriority apicv tsc_offset vtpr mtf vapic ept vpid unrestricted_guest vapic_reg vid ple shadow_vmcs pml\nbugs\t\t<span class=\"token builtin class-name\">:</span> cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit\nbogomips\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">4199.96</span>\nclflush size\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">64</span>\ncache_alignment\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">64</span>\naddress sizes\t<span class=\"token builtin class-name\">:</span> <span class=\"token number\">46</span> bits physical, <span class=\"token number\">48</span> bits virtual\npower management:\n\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "cpu",
        "linux",
        "shell"
      ],
      "createTime": 1663426828058,
      "updateTime": 1663426828058,
      "uuid": "7b14e1ee-df06-4066-a451-2d73dd86eace",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "今天看了张鑫旭的一个处理图片加载错误处理方法的视频，我觉得很是优雅。\n\n视频连接附上[图片加载出错样式最佳实践](https://www.bilibili.com/video/BV1rG41137tu);\n\n## 常见做法\n\n监听 `onerror` 事件，当图片加载出错时，触发该事件，然后我们替换为一张兜底图\n\n```js\n<img src='xxx.png' onerror='this.src=\"break.svg\"'\n```\n\n```css\nimg[src$=\"break.svg\"] {\n  /* 个人疑惑，为什么是 contain */\n  object-fit: contain;\n}\n```\n\n这样做的缺点是只有一张裂开的图，用户不知道<span class=\"comments red\">这张图表达的含义是什么</span>，对用户而言，内容是比视觉体验重要的。\n\n## 基于 CSS 的方法\n\n使用伪元素 `::before` `::after` 来展示兜底图和提示内容，<span class=\"comments green\">`img` 有一个特性是能正常加载图片时，`::before` 和 `::after` 是不会显示出来的</span>。\n\n```html\n<img\n  src=\"zxx.png\"\n  alt=\"提示内容\"\n>\n```\n\n```note\n一定要写 `alt` 属性。\n```\n\n```css\nimg {\n  position: relative;\n  /* 下面这行的意义是什么 */\n  transform: scale(1); \n}\n\nimg::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: url(break.svg) no-repeat center / 50% 50% #f5f5f5;\n  color: transparent;\n}\n\nimg::after {\n  content: attr(alt);\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  line-height: 2;\n  background-color: rgba(0, 0, 0, .5);\n  color: white;\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n```\n\n既能呈现视觉效果，也能显示内容。\n",
      "preview": "<p>今天看了张鑫旭的一个处理图片加载错误处理方法的视频，我觉得很是优雅。</p>\n<p>视频连接附上<a aria-label-position=\"top\" aria-label=\"https://www.bilibili.com/video/BV1rG41137tu\" rel=\"noopener\" class=\"external-link\" href=\"https://www.bilibili.com/video/BV1rG41137tu\" target=\"_blank\">图片加载出错样式最佳实践</a>;</p>\n<h2 data-heading=\"常见做法\">常见做法</h2>\n<p>监听 <code>onerror</code> 事件，当图片加载出错时，触发该事件，然后我们替换为一张兜底图</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">'xxx.png'</span> onerror<span class=\"token operator\">=</span><span class=\"token string\">'this.src=\"break.svg\"'</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css is-loaded\"><span class=\"token selector\">img<span class=\"token attribute\"><span class=\"token punctuation\">[</span><span class=\"token attr-name\">src</span><span class=\"token operator\">$=</span><span class=\"token attr-value\">\"break.svg\"</span><span class=\"token punctuation\">]</span></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 个人疑惑，为什么是 contain */</span>\n  <span class=\"token property\">object-fit</span><span class=\"token punctuation\">:</span> contain<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>这样做的缺点是只有一张裂开的图，用户不知道<span class=\"comments red\">这张图表达的含义是什么</span>，对用户而言，内容是比视觉体验重要的。</p>\n<h2 data-heading=\"基于 CSS 的方法\">基于 CSS 的方法</h2>\n<p>使用伪元素 <code>::before</code> <code>::after</code> 来展示兜底图和提示内容，<span class=\"comments green\"><code>img</code> 有一个特性是能正常加载图片时，<code>::before</code> 和 <code>::after</code> 是不会显示出来的</span>。</p>\n<pre class=\"language-html\" tabindex=\"0\"><code class=\"language-html is-loaded\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n  <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zxx.png<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>提示内容<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">&gt;</span></span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<div class=\"block-language-note custom-block note\"><p class=\"custom-block-title\">Note</p><p>一定要写 <code>alt</code> 属性。</p></div>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css is-loaded\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/* 下面这行的意义是什么 */</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">img<span class=\"token pseudo-element\">::before</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>break.svg<span class=\"token punctuation\">)</span></span> no-repeat center <span class=\"token operator\">/</span> <span class=\"token number\">50</span><span class=\"token unit\">%</span> <span class=\"token number\">50</span><span class=\"token unit\">%</span> <span class=\"token hexcode color\">#f5f5f5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">transparent</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">img<span class=\"token pseudo-element\">::after</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>alt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token unit\">%</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token color\"><span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-overflow</span><span class=\"token punctuation\">:</span> ellipsis<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>既能呈现视觉效果，也能显示内容。</p>",
      "tags": [
        "CSS",
        "图片加载",
        "错误处理"
      ],
      "createTime": 1663293888836,
      "updateTime": 1663293947848,
      "uuid": "4884910e-8b8f-4104-b1e5-c84a335edc0e",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "```info\n该笔记是来源于公众号文章[还在用定时器吗？借助 CSS 来监听事件](https://mp.weixin.qq.com/s/N25KcGneKPgvBa8zBownlw)。\n```\n\n## hover延时触发\n\n### 一般方法\n\n鼠标进入时开始定时器\n\n```js\nvar timer = null\nel.addEventListener('mouseover', () => {\n  timer && clearTimeout(timer)\n  timer = setTimeout(() => {\n    // 具体逻辑\n  }, 1000)\n})\n```\n\n鼠标离开时取消定时器\n\n```js\nel.addEventListener('mouseout', () => {\n  timer && clearTimeout(timer)\n})\n```\n\n### 利用动画结束事件\n\n为元素添加延时动画\n\n```css\nbutton:hover{\n  opacity: 0.999; /*无关紧要的样式*/\n  transition: 0s 1s opacity; /*延时 1s */\n}\n```\n\n监听动画结束事件\n\n```js\nel.addEventListener('transitionend', () => {\n  // 具体逻辑\n})\n```\n\n无需定时器，也无需取消，更无需考虑 dom 结构，完美实现。\n\n## 长按触发\n\n### 一般方法\n\n借助定时器，按下时开启定时器，离开时取消定时器\n\n```js\n\nel.onmousedown = function(){\n    this.timer && clearTimeout(this.timer);\n    this.timer = settimeout(function(){\n        //业务代码\n    },1000)\n}\nel.onmouseup = function(){\n    this.timer && clearTimeout(this.timer);\n}\n```\n\n### 利用动画结束事件\n\n为 `:active` 伪类添加延时动画\n\n```css\nbutton:hover:active{\n  opacity: .999; /*无关紧要的样式*/\n  transition: opacity 1s; /*延时 1s */\n}\n```\n\n然后再监听 `transitionend` 事件\n\n```js\nel.addEventListener('transitionend', () => {\n  // 具体逻辑\n})\n```\n\n## 轮播和暂停\n\n### 一般方法\n\n鼠标放上去时暂停，鼠标离开时自动滚动，借助定时器 `setInterveal` 进行轮播，鼠标放上去时清除定时器，鼠标离开时新建定时器\n\n```js\nfunction autoPlay(){\n  timer && clearInterval(timer)\n  timer = setInterval(function(){\n    // 轮播逻辑\n  }, 1000)\n}\nautoPlay()\nview.onmouseover = function(){\n    timer && clearInterval(timer)\n}\nel.onmouseout = function(){\n    autoPlay()\n}\n```\n\n## animationiteration 事件\n\n设置动画为无限次数，每次动画开始时都会触发 animationiteration 事件，鼠标放上去时动画暂停\n\n```css\n.view {\n  animation: scroll 1s infinite; /*每1s动画，无限循环*/\n}\n.view:hover{\n  animation-play-state: paused; /*hover暂停*/\n}\n@keyframes scroll {\n  to {\n    transform: translateZ(.1px); /*无关紧要的样式*/\n  }\n}\n```\n\n```js\n\nview.addEventListener(\"animationiteration\", () => {\n  // 轮播逻辑\n})\n```\n\n\n\n\n\n\n\n",
      "preview": "<div class=\"block-language-info custom-block info\"><p class=\"custom-block-title\">Info</p><p>该笔记是来源于公众号文章<a aria-label-position=\"top\" aria-label=\"https://mp.weixin.qq.com/s/N25KcGneKPgvBa8zBownlw\" rel=\"noopener\" class=\"external-link\" href=\"https://mp.weixin.qq.com/s/N25KcGneKPgvBa8zBownlw\" target=\"_blank\">还在用定时器吗？借助 CSS 来监听事件</a>。</p></div>\n<h2 data-heading=\"hover延时触发\">hover延时触发</h2>\n<h3 data-heading=\"一般方法\">一般方法</h3>\n<p>鼠标进入时开始定时器</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token keyword\">var</span> timer <span class=\"token operator\">=</span> <span class=\"token keyword null nil\">null</span>\nel<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  timer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n  timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 具体逻辑</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>鼠标离开时取消定时器</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\">el<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseout'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  timer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<h3 data-heading=\"利用动画结束事件\">利用动画结束事件</h3>\n<p>为元素添加延时动画</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css is-loaded\"><span class=\"token selector\">button<span class=\"token pseudo-class\">:hover</span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.999</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*无关紧要的样式*/</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token unit\">s</span> <span class=\"token number\">1</span><span class=\"token unit\">s</span> opacity<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*延时 1s */</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>监听动画结束事件</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\">el<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transitionend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 具体逻辑</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>无需定时器，也无需取消，更无需考虑 dom 结构，完美实现。</p>\n<h2 data-heading=\"长按触发\">长按触发</h2>\n<h3 data-heading=\"一般方法\">一般方法</h3>\n<p>借助定时器，按下时开启定时器，离开时取消定时器</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\">\nel<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onmousedown</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span> <span class=\"token operator\">=</span> <span class=\"token function\">settimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//业务代码</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nel<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onmouseup</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">timer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<h3 data-heading=\"利用动画结束事件\">利用动画结束事件</h3>\n<p>为 <code>:active</code> 伪类添加延时动画</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css is-loaded\"><span class=\"token selector\">button<span class=\"token pseudo-class\">:hover</span><span class=\"token pseudo-class\">:active</span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">.999</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*无关紧要的样式*/</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity <span class=\"token number\">1</span><span class=\"token unit\">s</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*延时 1s */</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>然后再监听 <code>transitionend</code> 事件</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\">el<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transitionend'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 具体逻辑</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<h2 data-heading=\"轮播和暂停\">轮播和暂停</h2>\n<h3 data-heading=\"一般方法\">一般方法</h3>\n<p>鼠标放上去时暂停，鼠标离开时自动滚动，借助定时器 <code>setInterveal</code> 进行轮播，鼠标放上去时清除定时器，鼠标离开时新建定时器</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token keyword\">function</span> <span class=\"token function\">autoPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  timer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n  timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 轮播逻辑</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">autoPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nview<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    timer <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nel<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">autoPlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<h2 data-heading=\"animationiteration 事件\">animationiteration 事件</h2>\n<p>设置动画为无限次数，每次动画开始时都会触发 animationiteration 事件，鼠标放上去时动画暂停</p>\n<pre class=\"language-css\" tabindex=\"0\"><code class=\"language-css is-loaded\"><span class=\"token selector\"><span class=\"token class\">.view</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> scroll <span class=\"token number\">1</span><span class=\"token unit\">s</span> infinite<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*每1s动画，无限循环*/</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\"><span class=\"token class\">.view</span><span class=\"token pseudo-class\">:hover</span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation-play-state</span><span class=\"token punctuation\">:</span> paused<span class=\"token punctuation\">;</span> <span class=\"token comment\">/*hover暂停*/</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> scroll</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateZ</span><span class=\"token punctuation\">(</span><span class=\"token number\">.1</span><span class=\"token unit\">px</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*无关紧要的样式*/</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\">\nview<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"animationiteration\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 轮播逻辑</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "定时器",
        "CSS动画",
        "牛逼！"
      ],
      "createTime": 1663078148084,
      "updateTime": 1663078973199,
      "uuid": "61a8b685-1cca-4138-8028-c8647ea3d8bb",
      "isCreated": true,
      "isDeleted": true
    }
  ]
}