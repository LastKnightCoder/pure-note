{
  "editing": {},
  "notes": [
    {
      "content": "TDOP 算法",
      "preview": "<p>TDOP 算法</p>",
      "tags": [
        "编译原理",
        "表达式"
      ],
      "createTime": 1676287719151,
      "updateTime": 1676287759508,
      "uuid": "7b7949ea-16d2-42f7-84c1-a21fff7b5123",
      "isCreated": true
    },
    {
      "content": "写字\n\n```js\nconst a = 1;\n```",
      "preview": "<p>写字</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "demos"
      ],
      "createTime": 1670659474694,
      "updateTime": 1670659474694,
      "uuid": "83a4a4c2-bab0-432f-a84a-71dc87258796",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "fiber.tag，fiber 的类型，25 个\n\n```js\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const FundamentalComponent = 20;\nexport const ScopeComponent = 21;\nexport const Block = 22;\nexport const OffscreenComponent = 23;\nexport const LegacyHiddenComponent = 24;\n```",
      "preview": "<p>fiber.tag，fiber 的类型，25 个</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">FunctionComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ClassComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">IndeterminateComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Before we know whether it is function or class</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">HostRoot</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Root of a host tree. Could be nested inside another node.</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">HostPortal</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// A subtree. Could be an entry point to a different renderer.</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">HostComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">HostText</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Fragment</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Mode</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ContextConsumer</span> <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ContextProvider</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ForwardRef</span> <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Profiler</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">SuspenseComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">MemoComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">SimpleMemoComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">LazyComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">IncompleteClassComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">DehydratedFragment</span> <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">SuspenseListComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">FundamentalComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">ScopeComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Block</span> <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">OffscreenComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">LegacyHiddenComponent</span> <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "React",
        "Fiber"
      ],
      "createTime": 1668432865572,
      "updateTime": 1668432865572,
      "uuid": "8b0cab7b-13b2-4a1c-bd9b-a40eebfb25c9",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "React 的 20 个内部节点类型\n\n```js\nREACT_ELEMENT_TYPE = symbolFor('react.element');\nREACT_PORTAL_TYPE = symbolFor('react.portal');\nREACT_FRAGMENT_TYPE = symbolFor('react.fragment');\nREACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\nREACT_PROFILER_TYPE = symbolFor('react.profiler');\nREACT_PROVIDER_TYPE = symbolFor('react.provider');\nREACT_CONTEXT_TYPE = symbolFor('react.context');\nREACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\nREACT_SUSPENSE_TYPE = symbolFor('react.suspense');\nREACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\nREACT_MEMO_TYPE = symbolFor('react.memo');\nREACT_LAZY_TYPE = symbolFor('react.lazy');\nREACT_BLOCK_TYPE = symbolFor('react.block');\nREACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\nREACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\nREACT_SCOPE_TYPE = symbolFor('react.scope');\nREACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\nREACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\nREACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\nREACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n```",
      "preview": "<p>React 的 20 个内部节点类型</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token constant\">REACT_ELEMENT_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.element'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_PORTAL_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.portal'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_FRAGMENT_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.fragment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_STRICT_MODE_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.strict_mode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_PROFILER_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.profiler'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_PROVIDER_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.provider'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_CONTEXT_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.context'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_FORWARD_REF_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.forward_ref'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_SUSPENSE_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.suspense'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_SUSPENSE_LIST_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.suspense_list'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_MEMO_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.memo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_LAZY_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.lazy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_BLOCK_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.block'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_SERVER_BLOCK_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.server.block'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_FUNDAMENTAL_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.fundamental'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_SCOPE_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.scope'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_OPAQUE_ID_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.opaque.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_DEBUG_TRACING_MODE_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.debug_trace_mode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_OFFSCREEN_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.offscreen'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">REACT_LEGACY_HIDDEN_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token function\">symbolFor</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react.legacy_hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "React"
      ],
      "createTime": 1668432072913,
      "updateTime": 1668432081164,
      "uuid": "200e104e-ebcf-4aa8-ba17-b4c74f003092",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "CommonJS，值拷贝，不会更改\n\n```js\n// a.js\nlet a = 1;\nconst add = () => {\n  a += 1;\n}\n\nexports.a = a;\nexports.add = add;\n```\n\n```js\n// b.js\nconst moduleA = require('./a');\n\nconsole.log(moduleA.a); // 1\nmoduleA.add();\nconsole.log(moduleA.a); // 1\n```\n\nES Module，实时绑定，实时变化\n\n```js\n// c.mjs\nexport let a = 1;\nexport function add() {\n  a += 1;\n}\n```\n\n```js\n// d.mjs\nimport { a, add } from './c.mjs';\n\nconsole.log(a); // 1\nadd();\nconsole.log(a); // 2\n```",
      "preview": "<p>CommonJS，值拷贝，不会更改</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token comment\">// a.js</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token property-access\">add</span> <span class=\"token operator\">=</span> add<span class=\"token punctuation\">;</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token comment\">// b.js</span>\n<span class=\"token keyword\">const</span> moduleA <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>moduleA<span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nmoduleA<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>moduleA<span class=\"token punctuation\">.</span><span class=\"token property-access\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>ES Module，实时绑定，实时变化</p>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token comment\">// c.mjs</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<pre class=\"language-js\" tabindex=\"0\"><code class=\"language-js is-loaded\"><span class=\"token comment\">// d.mjs</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> add <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./c.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "CommonJS",
        "ES Module"
      ],
      "createTime": 1668351968212,
      "updateTime": 1668352055361,
      "uuid": "1a07fe9b-36c7-4abb-9eef-1b309c3be08f",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "fiber 对象用 stateNode 指向了当前的 DOM 元素",
      "preview": "<p>fiber 对象用 stateNode 指向了当前的 DOM 元素</p>",
      "tags": [],
      "createTime": 1668346288353,
      "updateTime": 1668346288353,
      "uuid": "54753729-a68a-4db4-8719-588ff1a57e48",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "`useInsertionEffect` 执行时机在 `useLayoutEffect` 和 `useEffect` 之前，主要是为了解决 `CSS in JS` 的问题。\n\n以 `styled-components` 为例，当个组件 JS 被执行的时候，会动态生成 CSS 选择器，并以 `style` 标签的形式插入到 `head` 中。如果在 `useLayoutEffect` 和 `useEffect` 使用 `CSS in JS`，会导致浏览器再次重绘和重排，影响性能。\n",
      "preview": "<p><code>useInsertionEffect</code> 执行时机在 <code>useLayoutEffect</code> 和 <code>useEffect</code> 之前，主要是为了解决 <code>CSS in JS</code> 的问题。</p>\n<p>以 <code>styled-components</code> 为例，当个组件 JS 被执行的时候，会动态生成 CSS 选择器，并以 <code>style</code> 标签的形式插入到 <code>head</code> 中。如果在 <code>useLayoutEffect</code> 和 <code>useEffect</code> 使用 <code>CSS in JS</code>，会导致浏览器再次重绘和重排，影响性能。</p>",
      "tags": [],
      "createTime": 1668304488766,
      "updateTime": 1668304488766,
      "uuid": "a583c374-918d-477c-a989-c5fba82f7fbd",
      "isCreated": true
    },
    {
      "content": "`npm` 设置国内镜像源\n\n```shell\nnpm config set registry https://registry.npm.taobao.org\n```",
      "preview": "<p><code>npm</code> 设置国内镜像源</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\"><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npm.taobao.org\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [],
      "createTime": 1667364030929,
      "updateTime": 1668226102798,
      "uuid": "de195552-8c62-42e9-99a9-fdb7efc46f5c",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "TypeScript 中的逆变与协变参考文章：https://dev.to/codeoz/how-i-understand-covariance-contravariance-in-typescript-2766",
      "preview": "<p>TypeScript 中的逆变与协变参考文章：<a rel=\"noopener\" class=\"external-link\" href=\"https://dev.to/codeoz/how-i-understand-covariance-contravariance-in-typescript-2766\" target=\"_blank\">https://dev.to/codeoz/how-i-understand-covariance-contravariance-in-typescript-2766</a></p>",
      "tags": [],
      "createTime": 1666230746331,
      "updateTime": 1666230746331,
      "uuid": "d2ab5034-af58-4005-8db6-35b5ff9def01",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "如何发布 npm 包。\n\n1. 需要有 npm 账号，前往[官网](https://www.npmjs.com/) 注册账号\n2. 确定你的 registry\n\n  ```shell\n  npm config get registry // 先康康你的是否是npm官方的源，不是请切回\n  npm config set registry https://registry.npmjs.org\n  ```\n3. 在命令行登录，输入 `npm adduser` 登录，输入注册时的用户名，密码以及邮箱，注意接收邮箱的验证码\n4. 修改 `package.json`\n5. `npm publish` 发布",
      "preview": "<p>如何发布 npm 包。</p>\n<ol>\n<li>需要有 npm 账号，前往<a aria-label-position=\"top\" aria-label=\"https://www.npmjs.com/\" rel=\"noopener\" class=\"external-link\" href=\"https://www.npmjs.com/\" target=\"_blank\">官网</a> 注册账号</li>\n<li>确定你的 registry</li>\n</ol>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\"><span class=\"token function\">npm</span> config get registry // 先康康你的是否是npm官方的源，不是请切回\n<span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npmjs.org\n</code><button class=\"copy-code-button\">复制</button></pre>\n<ol start=\"3\">\n<li>在命令行登录，输入 <code>npm adduser</code> 登录，输入注册时的用户名，密码以及邮箱，注意接收邮箱的验证码</li>\n<li>修改 <code>package.json</code></li>\n<li><code>npm publish</code> 发布</li>\n</ol>",
      "tags": [
        "npm",
        "发包"
      ],
      "createTime": 1665903152407,
      "updateTime": 1665907157169,
      "uuid": "a6875f51-b8a1-4ed6-82b8-d4303ed970c4",
      "isCreated": true,
      "isDeleted": true
    },
    {
      "content": "## Slidev 发布到 Github Pages\n\n方法一：手动部署\n\n修改 `npm scripts`\n\n```json\n\"build\": \"slidev build --base /${repo}/\"\n```\n\n将上面的 `${repo}` 替换为仓库名称。\n\n提交代码：\n\n```shell\ngit init\ngit add .\ngit commit -m \"~~~\"\ngit remote add origin ${repoUrl}\ngit push -u origin master\n```\n\n提交 build 后的代码到 gh-pages\n\n```shell\nnpm run build\ncd dist\ngit init\ngit add .\ngit commit -m \"~~~\"\ngit remote add origin ${repoUrl}\ngit checkout -b gh-pages\ngit push -u origin gh-pages\n```\n\n方法二：Github Action\n\n```yaml\nname: Build and Deploy\non:\n  push:\n    branches:\n      - master\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout 🛎️\n        uses: actions/checkout@v2.3.1\n\n      - name: Set Node Version\n        uses: actions/setup-node@v1\n        with:\n          node-version: '16.x'\n\n      - name: Install and Build 🔧\n        run: |\n          npm install\n          npm run build\n        env:\n          NODE_OPTIONS: '--max_old_space_size=4096'\n\n      - name: Deploy 🚀\n        uses: JamesIves/github-pages-deploy-action@4.1.3\n        with:\n          BRANCH: gh-pages # The branch the action should deploy to.\n          FOLDER: dist # The folder the action should deploy.\n```",
      "preview": "<h2 data-heading=\"Slidev 发布到 Github Pages\">Slidev 发布到 Github Pages</h2>\n<p>方法一：手动部署</p>\n<p>修改 <code>npm scripts</code></p>\n<pre class=\"language-json\" tabindex=\"0\"><code class=\"language-json is-loaded\"><span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"slidev build --base /${repo}/\"</span>\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>将上面的 <code>${repo}</code> 替换为仓库名称。</p>\n<p>提交代码：</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"~~~\"</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin <span class=\"token variable\">${repoUrl}</span>\n<span class=\"token function\">git</span> push -u origin master\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>提交 build 后的代码到 gh-pages</p>\n<pre class=\"language-shell\" tabindex=\"0\"><code class=\"language-shell is-loaded\"><span class=\"token function\">npm</span> run build\n<span class=\"token builtin class-name\">cd</span> dist\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"~~~\"</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin <span class=\"token variable\">${repoUrl}</span>\n<span class=\"token function\">git</span> checkout -b gh-pages\n<span class=\"token function\">git</span> push -u origin gh-pages\n</code><button class=\"copy-code-button\">复制</button></pre>\n<p>方法二：Github Action</p>\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml is-loaded\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build-and-deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout 🛎️\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2.3.1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set Node Version\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16.x'</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install and Build 🔧\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm install\n          npm run build</span>\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">NODE_OPTIONS</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'--max_old_space_size=4096'</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy 🚀\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> JamesIves/github<span class=\"token punctuation\">-</span>pages<span class=\"token punctuation\">-</span>deploy<span class=\"token punctuation\">-</span>action@4.1.3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">BRANCH</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages <span class=\"token comment\"># The branch the action should deploy to.</span>\n          <span class=\"token key atrule\">FOLDER</span><span class=\"token punctuation\">:</span> dist <span class=\"token comment\"># The folder the action should deploy.</span>\n</code><button class=\"copy-code-button\">复制</button></pre>",
      "tags": [
        "slidev",
        "Github"
      ],
      "createTime": 1665677821650,
      "updateTime": 1665708382304,
      "uuid": "1305b26a-bbcc-4c3d-934c-136d16177ed4",
      "isCreated": true,
      "isDeleted": true
    }
  ]
}