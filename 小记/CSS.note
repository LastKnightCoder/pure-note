{
  "editing": {
    "content": "",
    "preview": "",
    "tags": []
  },
  "notes": [
    {
      "content": "`:where()` 伪类的优先级是0，无论其参数内的选择器优先级多高。\n\n`:is()` 伪类的优先级是由括号内选择器的优先级决定的。\n\n\n在 Vue 等框架中使用 `:is()` 伪类，选择器就不会再增加随机属性选择器。\n\n`:is()` 伪类正式支持是 Chrome88 开始的，也就是 21 年 1 月份，到现在已经快 2 年了，那些对兼容性要求不高的项目可以放心大胆使用，如果非要兼容陈旧浏览器，可以使用 `:-webkit-any()` 伪类兼容下，除了选择器的优先级不一样外（`:any()`伪类的优先级恒定为类选择器优先级，忽略里面的参数），其他功效是一样的。",
      "preview": "<p><code>:where()</code> 伪类的优先级是0，无论其参数内的选择器优先级多高。</p>\n<p><code>:is()</code> 伪类的优先级是由括号内选择器的优先级决定的。</p>\n<p>在 Vue 等框架中使用 <code>:is()</code> 伪类，选择器就不会再增加随机属性选择器。</p>\n<p><code>:is()</code> 伪类正式支持是 Chrome88 开始的，也就是 21 年 1 月份，到现在已经快 2 年了，那些对兼容性要求不高的项目可以放心大胆使用，如果非要兼容陈旧浏览器，可以使用 <code>:-webkit-any()</code> 伪类兼容下，除了选择器的优先级不一样外（<code>:any()</code>伪类的优先级恒定为类选择器优先级，忽略里面的参数），其他功效是一样的。</p>",
      "tags": [
        ":where",
        ":is",
        "选择器",
        "Vue"
      ],
      "createTime": 1674704531395,
      "updateTime": 1674704565849,
      "uuid": "aacd258e-09e0-40ee-9d28-92107819cf2e",
      "isCreated": true,
      "isDeleted": true
    }
  ]
}